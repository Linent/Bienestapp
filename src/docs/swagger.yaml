openapi: 3.0.0
info:
  title: Asesorías API
  description: API para gestionar el sistema de asesorías universitarias
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Servidor local

  - url: https://bienestapp-tp1o.onrender.com
    description: Servidor en producción (Render)

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

tags:
  - name: Users
    description: Rutas de usuarios
  - name: Careers
    description: Rutas de carreras
  - name: Advisory
    description: Rutas de asesorías
  - name: Schedule
    description: Rutas de agendamiento de asesorías
  - name: Topics
    description: Rutas de temas
  - name: Reportes
security:
  - ApiKeyAuth: []
paths:
  /career/:
    get:
      summary: Obtener todas las carreras
      tags:
        - Careers
      responses:
        "201":
          description: Carreras obtenidas
  /career/create:
    post:
      summary: Crear una nueva carrera
      tags:
        - Careers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Ingeniería de Sistemas"
                code:
                  type: string
                  example: "115"
      responses:
        "201":
          description: Carrera creada con éxito
        "400":
          description: Datos inválidos
        "500":
          description: Error interno del servidor
  /career/{id}:
    get:
      summary: Obtener una carrera por ID
      tags:
        - Careers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "65b3a2f45f1d3a001cc9e4d2"
      responses:
        "200":
          description: Carrera encontrada con éxito
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    code:
                      type: string
                      example: "115"
                    name:
                      type: string
                      example: "Ingeniería de Sistemas"
                    enable:
                      type: boolean
                      example: true
                    createdAt:
                      type: string
                      format: date-time
                      example: "2025-03-20T12:00:00Z"
                    updatedAt:
                      type: string
                      format: date-time
                      example: "2025-03-20T12:30:00Z"
        "404":
          description: Carrera no encontrada
        "500":
          description: Error interno del servidor

    put:
      summary: Actualizar una carrera
      tags:
        - Careers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "67d3b319b244114e7e12ef17"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Ingeniería de Software"
                code:
                  type: string
                  example: "115"
      responses:
        "200":
          description: Carrera actualizada con éxito
        "404":
          description: Carrera no encontrada
        "500":
          description: Error interno del servidor
  /career/enable/{careerId}:
    post:
      summary: Crear una nueva carrera
      tags:
        - Careers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enable:
                  type: Boolean
                  example: true
      responses:
        "201":
          description: Carrera creada con éxito
        "400":
          description: Datos inválidos
        "500":
          description: Error interno del servidor
  /user/register:
    post:
      summary: Crear un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Juan Pérez"
                email:
                  type: string
                  example: "juan.perez@example.com"
                password:
                  type: string
                  format: password
                  example: "123456"
                role:
                  type: string
                  enum: ["student", "professor"]
                  example: "student"
                career:
                  type: string
                  description: "ID de la carrera a la que pertenece"
                  example: "67d3b319b244114e7e12ef17"
                codigo:
                  type: string
                  description: "Código del estudiante o profesor"
                  example: "1151756"
      responses:
        "201":
          description: Usuario registrado con éxito
        "400":
          description: Datos inválidos
        "500":
          description: Error interno del servidor
  /user/login:
    post:
      summary: Iniciar sesión
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            example:
              email: "ochoaanderson102@gmail.com"
              password: "123456789"
      responses:
        "200":
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsIn..."
        "400":
          description: Credenciales inválidas
        "500":
          description: Error interno del servidor
  /user:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        '200':
          description: Lista de todos los usuarios
  /user/enable/{userId}:
    post:
      summary: habilitar o deshabilitar a un usuario
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enable:
                  type: Boolean
                  example: false
      responses:
        '200':
          description: usuario habilitado o deshabilitado
  /user/{userId}:
    get:
      summary: obtener un usuario por ID
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: se obtendra los datos con sus datos
    post:
      summary: modificar datos de un usuario
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example:
                email:
                  type: string
                  example:
                codigo:
                  type: string
                  example:
                password:
                  type: string
                  example:
                role:
                  type: string
                  example: 'student'
      responses:
        '200':
          description: datos del usuario actualizado correctamente                   
  /user/{userId}/files:
    put:
      summary: Subir o actualizar imagen de perfil y hoja de vida de un usuario
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                resume:
                  type: string
                  format: binary
                  description: Hoja de vida del usuario (PDF)
                image:
                  type: string
                  format: binary
                  description: Imagen de perfil del usuario (JPG, PNG)
      responses:
        200:
          description: Archivos actualizados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  resumeUrl:
                    type: string
                    example: "https://example.com/resume.pdf"
                  imageUrl:
                    type: string
                    example: "https://example.com/profile.jpg"
        400:
          description: Solicitud inválida
        403:
          description: No autorizado
        404:
          description: Usuario no encontrado
        500:
          description: Error interno del servidor
  /user/import:
    post:
      summary: Importar usuarios académicos desde archivo Excel o CSV
      tags:
        - Users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Archivo Excel o CSV (.xlsx, .xls, .csv) con los datos de los usuarios
      responses:
        200:
          description: Usuarios importados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  created:
                    type: integer
                    example: 5
                  skipped:
                    type: integer
                    example: 2
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        row:
                          type: object
                          description: Fila del archivo con error
                        error:
                          type: string
                          description: Mensaje de error asociado
        400:
          description: Archivo no proporcionado o formato inválido
        403:
          description: No autorizado – solo administradores pueden importar
        500:
          description: Error interno del servidor
  /advisory/advisor/{advisorId}:
    get:
      summary: Obtener asesorías agendadas para un asesor
      tags:
        - Advisory
      parameters:
        - name: advisorId
          in: path
          required: true
          schema:
            type: string
          example: "65b3a2f45f1d3a001cc9e4d2"
      responses:
        "200":
          description: Lista de asesorías obtenida con éxito
        "404":
          description: No se encontraron asesorías
        "500":
          description: Error interno del servidor        
  /advisory:
    get:
      summary: Obtener todas las asesorías
      tags: 
        - Advisory
      responses:
        '200':
          description: Lista de asesorías
  /advisory/thisweek:
    get:
      summary: Obtener asesorías de esta semana
      tags: 
        - Advisory
      responses:
        '200':
          description: Lista de asesorías de esta semana
  /advisory/create:
    post:
      summary: Crear una nueva asesoría
      tags: 
        - Advisory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - advisorId
                - careerId
                - dateStart
                - day
                - status
              properties:
                advisorId:
                  type: string
                  description: ID del asesor que dicta la asesoría
                  example: 123
                careerId:
                  type: string
                  description: ID de la carrera/materia asociada
                  example: 456
                dateStart:
                  type: string
                  format: date-time
                  description: Fecha y hora de inicio de la asesoría (en formato ISO 8601, preferiblemente en UTC)
                  example: "2025-04-28T14:00:00Z"
                day:
                  type: string
                  description: Día de la semana en que se dicta la asesoría (en español, ej: lunes, martes)
                  example: lunes
                status:
                  type: string
                  enum: [pending, approved, completed, canceled]
                  description: Estado inicial de la asesoría
                  example: pending
      responses:
        "201":
          description: Asesoría creada con éxito
        "400":
          description: Datos inválidos o faltantes
        "401":
          description: Usuario no autorizado para crear asesorías
        "500":
          description: Error interno del servidor
  /advisory/{advisoryId}:
    get:
      summary: Obtener una asesoría por ID
      tags: 
        - Advisory
      parameters:
        - name: advisoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalles de la asesoría
        '404':
          description: Asesoría no encontrada
    put:
      summary: Actualizar una asesoría
      tags: 
        - Advisory
      parameters:
        - name: advisoryId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                advisoryId:
                  type: string
                  description: ID del amigo academico
                  example: 67d4df40e1711993d1edd37f
                careerId:
                  type: string
                  description: ID de la materia
                  example: 67d3b319b244114e7e12ef17
                dateStart:
                  type: string
                  format: date-time
                  description: Fecha y hora de inicio
                status:
                  type: string
                  enum: [pending, confirmed, completed, canceled]
                  description: Estado actualizado de la asesoría
                  example: pending
      responses:
        '200':
          description: Asesoría actualizada correctamente
        '400':
          description: Datos inválidos
        '404':
          description: Asesoría no encontrada
    delete:
      summary: Eliminar una asesoría
      tags: 
        - Advisory
      parameters:
        - name: advisoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Asesoría eliminada correctamente
        '404':
          description: Asesoría no encontrada
  /schedules/students-by-advisory:
    get:
      summary: Obtener estudiantes agendados para una asesoría por asesor y fecha exacta
      tags:
        - Schedule
      parameters:
        - name: advisoryId
          in: query
          required: true
          schema:
            type: string
          description: ID del asesor académico (amigo académico)
          example: "67f4a65ee2320613ef0a79f1"
        - name: day
          in: query
          required: true
          schema:
            type: string
          description: día
          example: "lunes"
        - name: dateStart
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: hora de la asesoría
          example: "2025-05-05T15:00:00.000+00:00"
      responses:
        "200":
          description: Lista de estudiantes agendados en esa asesoría
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    studentName:
                      type: string
                      example: Johan Ibarra
                    email:
                      type: string
                      example: johan@ufps.edu.co
                    topic:
                      type: string
                      example: Proyecto de grado
                    status:
                      type: string
                      example: pending
        "400":
          description: advisorId o dateStart faltante o inválido
        "500":
          description: Error interno del servidor
  /schedules/students/today:
    get:
      summary: obtener todos las asesorías
      tags:
        - Schedule
      responses:
        200:
          description: Todas las asistencias registradas   
  /schedules:
    get:
      summary: obtener todos las asesorías
      tags:
        - Schedule
      responses:
        200:
          description: Todas las asistencias registradas 
  /schedules/create:
    post:
      summary: Crear un nuevo registro de asistencia agendada
      tags:
        - Schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "studentId":
                  type: string
                  descriptión: código del estudiante
                  example: 67d4df03e1711993d1edd37b
                "topic": 
                  type: string
                  descriptión: 
                  example: Introducción a la Programación
                "advisoryId": 
                  type: string
                  descriptión: 
                  example: 67d8d485dc4bf243ae06a1fc
      responses:
        '201':
          description: Registro de asistencia agendada creado exitosamente
  /schedules/{scheduleId}:
    get:
      summary: Obtener un registro de asistencia agendada por ID
      tags:
        - Schedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Registro de asistencia obtenido exitosamente
    put:
      summary: Actualizar un registro de asistencia agendada
      tags:
        - Schedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        200:
          description: Registro actualizado exitosamente
    delete:
      summary: Eliminar un registro de asistencia agendada
      tags:
        - Schedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Registro eliminado exitosamente
  /schedules/student/{studentId}:
    get:
      summary: Obtener asesorías agendadas por un estudiante
      tags:
        - Schedule
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
          example: "67d4df03e1711993d1edd37b"
      responses:
        "200":
          description: Lista de asesorías obtenida con éxito
        "404":
          description: No se encontraron asesorías
        "500":
          description: Error interno del servidor
  /schedules/update-attendance:
    put:
      summary: Actualizar el estado de asistencia de una asesoría
      tags:
        - Schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                studentId:
                  type: string
                  description: ID del registro de asistencia
                  example: "67d4df03e1711993d1edd37b"
                attendanceStatus:
                  type: Boolean
                  description: asistio o no asistio a la asesoría
                  example: true
      responses:
        "200":
          description: Estado de asistencia actualizado con éxito
        "400":
          description: Datos inválidos o faltantes
        "404":
          description: Registro de asistencia no encontrado
  /advisory/report/last7days:
    get:
      summary: Obtener el reporte de asesorías de los últimos 7 días
      tags:
        - Advisory
      responses:
        "200":
          description: Informe de asesorías agrupadas por día
  /advisory/report/last30days:
    get:
      summary: Obtener el reporte de asesorías de los últimos 30 días
      tags:
        - Advisory
      responses:
        "200":
          description: Informe de asesorías agrupadas por día
  /advisory/report/lastyear:
    get:
      summary: Obtener el reporte de asesorías de cada mes en el último año
      tags:
        - Advisory
      responses:
        "200":
          description: Informe de asesorías agrupadas por mes
  /advisory/report/bydaterange:
    get:
      summary: Obtener el reporte de asesorías en un rango de fechas específico
      tags:
        - Advisory
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha de inicio en formato YYYY-MM-DD
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha de finalización en formato YYYY-MM-DD
      responses:
        "200":
          description: Informe de asesorías dentro del rango de fechas
  /advisory/report/mostActiveAdvisor:
    get:
      summary: Obtener el asesor con más asesorías asignadas
      tags:
        - Advisory
      responses:
        "200":
          description: Información del asesor más solicitado, incluyendo nombre, topic y carrera.
  /advisory/reports/yearly:
    get:
      summary: Obtener reporte de asesorías por año
      tags:
        - Advisory
      parameters:
        - name: year
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Reporte de asesorías anuales
  /advisory/report/top-careers:
    get:
      summary: Obtener las 5 carreras con más asesorías
      tags:
        - Advisory
      responses:
        "200":
          description: Retorna las carreras con más asesorías

  /user/send-email:
    post:
      summary: Enviar un correo a un usuario
      description: Envía un correo electrónico de bienvenida a un usuario registrado.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ID del usuario al que se enviará el correo.
                  example: "67d4df40e1711993d1edd37f"              
      responses:
        "200":
          description: Correo enviado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Correo enviado"
        "400":
          description: Error en la solicitud (usuario no encontrado o error en el envío).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Users
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: contraseña que se cambiara
                  example: 123456789
      responses:
        "200":
          description: Correo enviado exitosamente.                  
  /user/forgot-password:
    post:
      summary: Enviar un correo de recuperación de contraseña a un usuario
      description: Envía un correo electrónico de bienvenida a un usuario registrado.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: email del usuario al que se enviará el correo para recuperar contraseña.
                  example: "ochoaanderson102@gmail.com"
      responses:
        "200":
          description: Correo enviado exitosamente.
  /user/recovery-password/{token}:
    post:
      summary: En esta ruta se puede finalizar la actualización de contraseña si el usuario la olvido
      description: ruta para finalizar la solicitud de cambio de contraseña.
      tags:
        - Users
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: contraseña que se cambiara
                  example: 123456789
      responses:
        "200":
          description: Correo enviado exitosamente.
  
  /schedules/schedules-by-advisor:
    get:
      summary: Obtener la cantidad de asesorías por asesor
      tags:
        - Schedule Reports
      responses:
        "200":
          description: Retorna la cantidad de asesorías por asesor
        "403":
          description: No autorizado
        "500":
          description: Error del servidor
  /schedules/attendance-per-schedule:
    get:
      summary: Obtener el promedio de asistencia por asesoría
      tags:
        - Schedule Reports
      responses:
        "200":
          description: Retorna el promedio de asistencia por asesoría
        "403":
          description: No autorizado
        "500":
          description: Error del servidor
  /schedules/schedules-by-topic:
    get:
      summary: Obtener la cantidad de asesorías por tema
      tags:
        - Schedule Reports
      responses:
        "200":
          description: Retorna la cantidad de asesorías por tema
        "403":
          description: No autorizado
        "500":
          description: Error del servidor
  /schedules/schedules-by-month:
    get:
      summary: Obtener la cantidad de asesorías por mes
      tags:
        - Schedule Reports
      responses:
        "200":
          description: Retorna la cantidad de asesorías por mes
        "403":
          description: No autorizado
        "500":
          description: Error del servidor
  /schedules/schedules-by-day:
    get:
      summary: Obtener la cantidad de asesorías por día de la semana
      tags:
        - Schedule Reports
      responses:
        "200":
          description: Retorna la cantidad de asesorías por día de la semana
        "403":
          description: No autorizado
        "500":
          description: Error del servidor
  /schedules/schedules-by-year:
    get:
      summary: Obtener la cantidad de asesorías por año
      tags:
        - Schedule Reports
      responses:
        "200":
          description: Retorna la cantidad de asesorías por año
        "403":
          description: No autorizado
        "500":
          description: Error del servidor
  /topics/create:
    post:
      summary: Crear un nuevo tema con archivo PDF
      description: Permite a un administrador crear un nuevo tema cargando un archivo PDF, junto con nombre, descripción y palabras clave.
      tags:
        - Topics
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - description
                - keywords
                - file
              properties:
                name:
                  type: string
                  description: Nombre del tema
                  example: Servicio médico
                description:
                  type: string
                  description: Descripción breve del tema
                  example: Información detallada sobre el acceso al servicio médico en la universidad.
                keywords:
                  type: string
                  description: Palabras clave separadas por comas (ej. servicio médico, cita, urgencias)
                  example: servicio médico, consulta médica, cita médica, horarios de atención, formulario de cita, requisitos consulta médica, valor cita médica, atención médica estudiantes, profesionales de salud, unidad de servicios de salud, campus universitario, consulta general, urgencias medica en la UFPS, certificados médicos, incapacidades, ubicación servicio médico, atención medica presencial, salud estudiantil
                file:
                  type: string
                  format: binary
                  description: Archivo PDF a subir
      responses:
        "201":
          description: Tema creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  filePath:
                    type: string
                  keywords:
                    type: array
                    items:
                      type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        "400":
          description: Datos inválidos o extensión no permitida
        "403":
          description: No autorizado (solo administradores pueden crear temas)
        "500":
          description: Error interno del servidor
  /topics:
    get:
      summary: Listar todos los temas
      tags:
        - Topics
      responses:
        "200":
          description: Lista de temas
  /topics/search:
    get:
      summary: Buscar temas por palabra clave
      tags:
        - Topics
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
          description: Palabra clave para buscar
      responses:
        "200":
          description: Resultados de búsqueda

  /topics/{topicId}:
    get:
      summary: Obtener tema por ID
      tags:
        - Topics
      parameters:
        - in: path
          name: topicId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Tema encontrado

    put:
      summary: Actualizar tema
      tags:
        - Topics
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                keywords:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: Tema actualizado

    delete:
      summary: Eliminar tema (marcado lógico)
      tags:
        - Topics
      responses:
        "200":
          description: Tema eliminado correctamente
  /schedules/total-advisories:
    get:
      summary: Obtener total de asesorías registradas
      tags:
        - Reportes
      responses:
        "200":
          description: Total de asesorías
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    example: 120
        "500":
          description: Error en el servidor

  /schedules/attendance-percentage:
    get:
      summary: Obtener porcentaje global de asistencia
      tags:
        - Reportes
      responses:
        "200":
          description: Porcentaje de asistencia
          content:
            application/json:
              schema:
                type: object
                properties:
                  percentage:
                    type: number
                    format: float
                    example: 85.5
        "500":
          description: Error en el servidor

  /schedules/monthly-advisories:
    get:
      summary: Obtener cantidad de asesorías del mes actual
      tags:
        - Reportes
      responses:
        "200":
          description: Total mensual de asesorías
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 40
        "500":
          description: Error en el servidor

  /schedules/most-active-advisor:
    get:
      summary: Obtener asesor con más asesorías registradas
      tags:
        - Reportes
      responses:
        "200":
          description: Asesor más activo
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "Juan Pérez"
                  total:
                    type: integer
                    example: 12
        "500":
          description: Error en el servidor
