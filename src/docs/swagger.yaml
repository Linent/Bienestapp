openapi: 3.0.0
info:
  title: Asesorías API
  description: API para gestionar el sistema de asesorías universitarias
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Servidor local

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

tags:
  - name: Careers
    description: Rutas de carreras
  - name: Users
    description: Rutas de usuarios
  - name: Advisory
    description: Rutas de asesorías
security:
  - ApiKeyAuth: []
paths:
  /career/create:
    post:
      summary: Crear una nueva carrera
      tags:
        - Careers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Career'
      responses:
        "201":
          description: Carrera creada con éxito
        "400":
          description: Datos inválidos
        "500":
          description: Error interno del servidor
  /career/:
    get:
      summary: Obtener todas las carreras
      tags:
        - Careers
      responses:
        "201":
          description: Carreras obtenidas
  /user/register:
    post:
      summary: Crear un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: Usuario registrado con éxito
        "400":
          description: Datos inválidos
        "500":
          description: Error interno del servidor
  /user/login:
    post:
      summary: Iniciar sesión
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            example:
              email: "usuario@example.com"
              password: "123456"
      responses:
        "200":
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsIn..."
        "400":
          description: Credenciales inválidas
        "500":
          description: Error interno del servidor
  /advisory:
    get:
      summary: Obtener todas las asesorías
      tags: 
        - Advisory
      responses:
        '200':
          description: Lista de asesorías
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/advisory'
  /advisory/create:
    post:
      summary: Crear una nueva asesoría
      tags: 
        - Advisory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/advisory'
      responses:
        '201':
          description: Asesoría creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/advisory'
        '400':
          description: Datos inválidos
  /advisory/{advisoryId}:
    get:
      summary: Obtener una asesoría por ID
      tags: 
        - Advisory
      parameters:
        - name: advisoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalles de la asesoría
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/advisory'
        '404':
          description: Asesoría no encontrada
    put:
      summary: Actualizar una asesoría
      tags: 
        - Advisory
      parameters:
        - name: advisoryId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvisoryUpdate'
      responses:
        '200':
          description: Asesoría actualizada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryUpdate'
        '400':
          description: Datos inválidos
        '404':
          description: Asesoría no encontrada
    delete:
      summary: Eliminar una asesoría
      tags: 
        - Advisory
      parameters:
        - name: advisoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Asesoría eliminada correctamente
        '404':
          description: Asesoría no encontrada
  /subjects:
    get:
      summary: Obtener todas las materias
      description: Retorna una lista de todas las materias disponibles en el sistema.
      tags:
        - Subjects
      responses:
        "200":
          description: Lista de materias obtenida exitosamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subject"
  /subjects/create:
    post:
      summary: Crear una nueva materia
      description: Crea una nueva materia en la base de datos.
      tags:
        - Subjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubjectInput"
      responses:
        "201":
          description: Materia creada exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subject"
        "400":
          description: Error en la solicitud.

  /subjects/{id}:
    get:
      summary: Obtener una materia por ID
      description: Retorna los detalles de una materia específica según su ID.
      tags:
        - Subjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la materia
      responses:
        "200":
          description: Materia encontrada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subject"
        "404":
          description: Materia no encontrada.

    put:
      summary: Actualizar una materia
      description: Modifica los datos de una materia existente.
      tags:
        - Subjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la materia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubjectInput"
      responses:
        "200":
          description: Materia actualizada exitosamente.
        "400":
          description: Error en la solicitud.
        "404":
          description: Materia no encontrada.

    delete:
      summary: Eliminar una materia
      description: Elimina una materia de la base de datos.
      tags:
        - Subjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la materia
      responses:
        "200":
          description: Materia eliminada exitosamente.
        "404":
          description: Materia no encontrada.
  /schedules:
    get:
      summary: Obtener todas las asistencias agendadas
      tags:
        - Schedule
      security:
        - BearerAuth: []
      responses:
        200:
          description: Lista de asistencias agendadas obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
  /schedules/create:
    post:
      summary: Crear un nuevo registro de asistencia agendada
      tags:
        - Schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
            example:
              "studentId": "67d4df03e1711993d1edd37b"
              "topic": "Introducción a la Programación"
              "advisoryId": "67d8d485dc4bf243ae06a1fc"
      responses:
        201:
          description: Registro de asistencia agendada creado exitosamente
  /schedules/{scheduleId}:
    get:
      summary: Obtener un registro de asistencia agendada por ID
      tags:
        - Schedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Registro de asistencia obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
    put:
      summary: Actualizar un registro de asistencia agendada
      tags:
        - Schedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        200:
          description: Registro actualizado exitosamente
    delete:
      summary: Eliminar un registro de asistencia agendada
      tags:
        - Schedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Registro eliminado exitosamente
  /advisory/report/last7days:
    get:
      summary: Obtener el reporte de asesorías de los últimos 7 días
      tags:
        - Advisory
      responses:
        "200":
          description: Informe de asesorías agrupadas por día
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdvisoryReport"

  /advisory/report/last30days:
    get:
      summary: Obtener el reporte de asesorías de los últimos 30 días
      tags:
        - Advisory
      responses:
        "200":
          description: Informe de asesorías agrupadas por día
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdvisoryReport"

  /advisory/report/lastyear:
    get:
      summary: Obtener el reporte de asesorías de cada mes en el último año
      tags:
        - Advisory
      responses:
        "200":
          description: Informe de asesorías agrupadas por mes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdvisoryReport"

  /advisory/report/bydaterange:
    get:
      summary: Obtener el reporte de asesorías en un rango de fechas específico
      tags:
        - Advisory
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha de inicio en formato YYYY-MM-DD
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha de finalización en formato YYYY-MM-DD
      responses:
        "200":
          description: Informe de asesorías dentro del rango de fechas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdvisoryReport"

  /advisory/report/mostActiveAdvisor:
    get:
      summary: Obtener el asesor con más asesorías asignadas
      tags:
        - Advisory
      responses:
        "200":
          description: Información del asesor más solicitado, incluyendo nombre, topic y carrera.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MostActiveAdvisor"
  /advisory/reports/yearly:
    get:
      summary: Obtener reporte de asesorías por año
      tags:
        - Advisory
      parameters:
        - name: year
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Reporte de asesorías anuales
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdvisoryReport"
  /advisory/report/top-careers:
    get:
      summary: Obtener las 5 carreras con más asesorías
      tags:
        - Advisory
      responses:
        "200":
          description: Retorna las carreras con más asesorías
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/careerReport'
components:
  schemas:
    Career:
      type: object
      properties:
        name:
          type: string
          example: "Ingeniería de Sistemas"
        code:
          type: string
          example: "115"

    User:
      type: object
      properties:
        name:
          type: string
          example: "Juan Pérez"
        email:
          type: string
          example: "juan.perez@example.com"
        password:
          type: string
          format: password
          example: "123456"
        role:
          type: string
          enum: ["student", "professor"]
          example: "student"
        career:
          type: string
          description: "ID de la carrera a la que pertenece"
          example: "67d3b319b244114e7e12ef17"
        codigo:
          type: string
          description: "Código del estudiante o profesor"
          example: "1151756"
    Login:
      type: object
      properties:
        email:
          type: string
          example: "juan.perez@example.com"
        password:
          type: string
          format: password
          example: "123456"
    advisory:
      type: object
      properties:
        advisorId:
          type: string
          description: ID del asesor asignado
          example: 123
        careerId:
          type: string
          description: ID de la materia
          example: 456
        dateStart:
          type: string
          format: date-time
          description: Fecha y hora de inicio
        status:
          type: string
          enum: [pending, approved, completed, canceled]
          description: Estado de la asesoría
          example: pending
    Advisory:
      type: object
      properties:
        id:
          type: string
        advisorId:
          type: string
        careerId:
          type: string
        dateStart:
          type: string
          format: date-time
        dateEnd:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, approved, completed, canceled]

    SubjectInput:
      type: object
      properties:
        advisorId:
          type: string
        careerId:
          type: string
        dateStart:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, approved, completed, canceled]
    MostActiveAdvisor:
      type: object
      properties:
        advisorId:
          type: string
          description: ID del asesor más solicitado
          example: "65f2bce5b99a345ad43cd123"
        advisorName:
          type: string
          description: Nombre del asesor
          example: "Juan Pérez"
        totalAdvisories:
          type: integer
          description: Número total de asesorías asignadas
          example: 25
        topic:
          type: string
          description: Tema específico de la asesoría
          example: "Cinemática"
        career:
          type: string
          description: Carrera relacionada con la asesoría
          example: "Ingeniería Mecánica"
      type: object
      properties:
        advisorId:
          type: string
          description: ID del asesor más solicitado
          example: "65f2bce5b99a345ad43cd123"
        advisorName:
          type: string
          description: Nombre del asesor
          example: "Juan Pérez"
        totalAdvisories:
          type: integer
          description: Número total de asesorías asignadas
          example: 25
        name:
          type: string
          description: Nombre de la asesoría
          example: "Asesoría en Física"
        topic:
          type: string
          description: Tema específico de la asesoría
          example: "Cinemática"
        career:
          type: string
          description: Carrera relacionada con la asesoría
          example: "Ingeniería Mecánica"
    AdvisoryReport:
      type: object
      properties:
        year:
          type: integer
        month:
          type: integer
        week:
          type: integer
        totalAdvisories:
          type: integer
    AdvisoryReport:
      type: object
      properties:
        _id:
          type: object
          properties:
            year:
              type: integer
              example: 2024
            month:
              type: integer
              example: 3
            day:
              type: integer
              example: 15
        totalAdvisories:
          type: integer
          example: 12
    AdvisoryUpdate:
      type: object
      properties:
        advisoryId:
          type: string
          description: ID del amigo academico
          example: 67d4df40e1711993d1edd37f
        careerId:
          type: string
          description: ID de la materia
          example: 67d3b319b244114e7e12ef17
        dateStart:
          type: string
          format: date-time
          description: Fecha y hora de inicio
        status:
          type: string
          enum: [pending, confirmed, completed, canceled]
          description: Estado actualizado de la asesoría
          example: pending
    Subject:
      type: object
      properties:
        id:
          type: string
          description: ID único de la materia.
        name:
          type: string
          description: Nombre de la materia.
        careerCode:
          type: string
          description: ID de la carrera asociada a la materia.
      example:
        id: "60f7c0e4a4b5a814d89b2a5d"
        name: "Programación Avanzada"
        careerCode: "60f7b1234c8e2f001c9a3b45"

    SubjectInput:
      type: object
      properties:
        name:
          type: string
          description: Nombre de la materia.
        careerCode:
          type: string
          description: ID de la carrera asociada a la materia.
      required:
        - name
        - careerCode
      example:
        name: "Matemáticas Discretas"
        careerCode: "60f7b1234c8e2f001c9a3b45"
    Schedule:
      type: object
      properties:
        studentId:
          type: string
          description: ID del estudiante
          example: 67d4df03e1711993d1edd37b
        advisoryId:
          type: string
          description: ID de la asesoría relacionada
          example:
        topic:
          type: string
          description: Tema específico de la asesoría
          example: conjuntos
        attendance:
          type: boolean
          description: Indica si el estudiante asistió o no
          example: false
        status:
          type: string
          enum: [pending, approved, completed, canceled]
          description: Estado de la asistencia agendada
      type: object
      properties:
        date:
          type: string
          format: date
          example: "2025-03-01"
        totalAdvisories:
          type: integer
          example: 15

    careerReport:
      type: object
      properties:
        career:
          type: string
          example: "Ingeniería de Sistemas"
        totalAdvisories:
          type: integer
          example: 40